parameters:  
  artifactName: 'Terraform'
  workingDirectory: '$(Pipeline.Workspace)'

stages:
- stage: 'plan${{ parameters.name }}'
  displayName: 'Plan - ${{ parameters.name }}'
  dependsOn: ${{ parameters.after }}
  variables: 
    - template: ../vars/release.yaml
    - template: ../vars/${{ parameters.name }}.yaml
  jobs:
  - template: command.yaml 
    parameters:
      name: '${{ parameters.name }}'
      command: 'plan'
      environment: '${{ parameters.environment }}'
      subscriptionName: '$(AZURE_SUBSCRIPTION)'
      terraformVersion: '$(TF_VERSION)'
      artifactName: ${{ parameters.artifactName }}
      terraformRoot: ${{ parameters.workingDirectory }}
      backendServiceArm: '$(TF_AZURE_BACKEND_SUBSCRIPTION)'
      backendAzureRmResourceGroupName: '$(TF_RESOURCE_GROUP_NAME)'
      backendAzureRmResourceGroupLocation: '$(TF_RESOURCE_GROUP_LOCATION)'
      backendAzureRmStorageAccountName: '$(TF_STORAGE_ACCOUNT_NAME)'
      backendAzureRmStorageAccountSku: '$(TF_STORAGE_ACCOUNT_SKU)'
      backendAzureRmContainerName: '$(TF_STORAGE_CONTAINER)'
      backendAzureRmKey: '$(TF_STORAGE_KEY)'

- stage: 'apply${{ parameters.name }}'
  displayName: 'Apply - ${{ parameters.name }}'
  variables: 
    - template: ../vars/release.yaml
    - template: ../vars/${{ parameters.name }}.yaml
  jobs:
  - template: command.yaml 
    parameters:
      name: '${{ parameters.name }}'
      command: 'apply'
      environment: '${{ parameters.environment }}'
      subscriptionName: '$(AZURE_SUBSCRIPTION)'
      terraformVersion: '$(TF_VERSION)'
      artifactName: ${{ parameters.artifactName }}
      terraformRoot: ${{ parameters.workingDirectory }}
      backendServiceArm: '$(TF_AZURE_BACKEND_SUBSCRIPTION)'
      backendAzureRmResourceGroupName: '$(TF_RESOURCE_GROUP_NAME)'
      backendAzureRmResourceGroupLocation: '$(TF_RESOURCE_GROUP_LOCATION)'
      backendAzureRmStorageAccountName: '$(TF_STORAGE_ACCOUNT_NAME)'
      backendAzureRmStorageAccountSku: '$(TF_STORAGE_ACCOUNT_SKU)'
      backendAzureRmContainerName: '$(TF_STORAGE_CONTAINER)'
      backendAzureRmKey: '$(TF_STORAGE_KEY)'