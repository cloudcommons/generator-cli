parameters:  
  name: 'generator'
  workingDirectory: '$(System.DefaultWorkingDirectory)'

jobs:
- job: Build${{ parameters.name}}
  strategy:
    maxParallel: 2
    matrix:    
      linux_node_12_terraform_0_12_19:
        vmImage: 'ubuntu-latest'
        nodeVersionSpec: '12.x'
        terraformVersion: '0.12.19'
      mac_node_12_terraform_0_12_19:
        vmImage: 'macos-latest'
        nodeVersionSpec: '12.x'
        terraformVersion: '0.12.19'
      windows_node_12_terraform_0_12_19:
        vmImage: 'windows-latest'
        nodeVersionSpec: '12.x'
        terraformVersion: '0.12.19'
  displayName: 'Build - ${{ parameters.name}}'
  pool:
    vmImage: $(vmImage)

  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '$(nodeVersionSpec)'
    displayName: 'Node.js - Install'

  - task: Npm@1
    displayName: 'NPM - Install'
    inputs:
      command: 'install'

  - task: TerraformInstaller@0
    displayName: 'Terraform - Install'
    inputs:
      terraformVersion: '$(terraformVersion)'      

  - task: AzureCLI@2
    displayName: 'NPM - Test'
    inputs:
      azureSubscription: '${{ parameters.azureSubscription }}'
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
          az --version
          az account show
          npm test
          
  - script: |
      npm publish --dry-run
    displayName: 'NPM - Publish (dry run)'